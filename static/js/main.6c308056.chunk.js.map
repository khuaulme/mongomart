{"version":3,"sources":["Cart/QuantitySelect.js","Cart/CartItem.js","Error.js","Cart/Cart.js","Category.js","ProductList/ProductListItem.js","Home.js","Login.js","ProductDetail/Inventory.js","ProductRating/ProductRatingStar.js","ProductRating/ProductRating.js","Reviews/ListReviews.js","Reviews/AddReview.js","ProductDetail/ProductItemDetail.js","index.js"],"names":["QuantityOption","props","quantity","react_default","a","createElement","value","QuantitySelect","options","Object","toConsumableArray","Array","keys","map","i","QuantitySelect_QuantityOption","key","name","defaultValue","selectedQuantity","onChange","updateQuantity","CartItem","item","itemLink","_id","imgUrl","process","img_url","Link","to","title","className","width","src","alt","Cart_QuantitySelect","itemId","userId","price","Error","error","message","errorCodeName","Cart","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","cart","items","cartError","undefined","bind","assertThisInitialized","_this2","client","auth","loginWithCredential","AnonymousCredential","then","db","collection","find","currentUser","id","first","setState","catch","err","console","event","_this3","target","newVal","updateOne","items._id","$set","items.$.quantity","response","modifiedCount","_this4","Cart_CartItem","e","src_Error","Fragment","renderCart","type","Component","Category","category","category_link","NavLink","activeClassName","num","ProductItem","item_link","slogan","description","Home","categories","categoriesError","productsError","fetchProducts","match","params","fetchCategories","prevProps","aggregate","$group","$sum","$sort","toArray","unshift","log","query","sort","asArray","queryString","parse","location","search","page","parseInt","skip","getCurrPage","limit","pages","Math","ceil","length","link","linkElm","activeClass","categoryName","renderCategories","renderProducts","renderPagination","Login","loggedIn","userName","login","logout","hasRedirectResult","handleRedirectResult","user","isLoggedIn","preventDefault","credential","GoogleRedirectCredential","loginWithRedirect","profile","href","onClick","Inventory","addToCart","incQuery","incUpdate","$inc","addQuery","addItem","addUpdate","$addToSet","upsert","stock","setNotification","ProductRatingStar","stars","ProductRating","ProductRating_ProductRatingStar","ListReviews","reviews","review","date","Date","dateString","getUTCFullYear","getUTCMonth","slice","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","editable","src_ProductRating_ProductRating","comment","AddReview","isWritingReview","rating","addReviewError","toggleWriteReview","handleRatingChange","handleCommentChange","addReview","productId","getTime","reviewsDb","getServiceClient","RemoteMongoClient","factory","insertOne","rows","cols","placeholder","ProductItemDetail","productError","reviewsError","fetchProduct","fetchReviews","renderProduct","renderReviews","numReviews","categoryLink","Inventory_Inventory","Reviews_ListReviews","AddReview_AddReview","Stitch","initializeDefaultAppClient","ReactDOM","render","BrowserRouter","basename","role","data-toggle","data-target","Login_Login","action","aria-hidden","Route","exact","path","src_Home","assign","src_Cart_Cart","ProductItemDetail_ProductItemDetail","document","getElementById"],"mappings":"0PAkBMA,EAAiB,SAAAC,GACrB,IAAMC,EAAWD,EAAMC,SACvB,OAAiB,IAAbA,EACKC,EAAAC,EAAAC,cAAA,UAAQC,MAAOJ,GAAf,cAEAC,EAAAC,EAAAC,cAAA,UAAQC,MAAOJ,GAAWA,IAItBK,EAzBQ,SAAAN,GACrB,IAAMO,EAAUC,OAAAC,EAAA,EAAAD,CAAIE,MAAM,IAAIC,QAAQC,IAAI,SAAAC,GAAC,OACzCX,EAAAC,EAAAC,cAACU,EAAD,CAAgBb,SAAUY,EAAGE,IAAKF,MAGpC,OACEX,EAAAC,EAAAC,cAAA,UACEY,KAAK,WACLC,aAAcjB,EAAMkB,iBACpBC,SAAUnB,EAAMoB,gBAEfb,ICyBQc,EAlCE,SAAArB,GACf,IAAMsB,EAAOtB,EAAMsB,KAEnB,IAAKA,EACH,OAAO,KAGT,IAAMC,EAAW,SAAWD,EAAKE,IAC3BC,EAASC,aAAyBJ,EAAKK,QAE7C,OACEzB,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CAAMC,GAAIN,GAAWD,EAAKQ,OAASR,EAAKQ,QAE1C5B,EAAAC,EAAAC,cAAA,MAAI2B,UAAU,qBACZ7B,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CAAMC,GAAIN,GACRrB,EAAAC,EAAAC,cAAA,OAAK4B,MAAM,MAAMC,IAAKR,EAAQS,IAAKZ,EAAKQ,UAG5C5B,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAC+B,EAAD,CACEjB,iBAAkBI,EAAKrB,SACvBmB,eAAgBpB,EAAMoB,eACtBgB,OAAQpC,EAAMoC,OACdC,OAAQrC,EAAMqC,UAGlBnC,EAAAC,EAAAC,cAAA,UAAKkB,EAAKgB,OACVpC,EAAAC,EAAAC,cAAA,UAAKkB,EAAKgB,MAAQhB,EAAKrB,YCbdsC,EAlBD,SAAAvC,GACZ,OAAIA,EAAMwC,MAENtC,EAAAC,EAAAC,cAAA,OAAK2B,UAAU,aACb7B,EAAAC,EAAAC,cAAA,OAAK2B,UAAU,aACZ/B,EAAMyC,SAAWvC,EAAAC,EAAAC,cAAA,UAAKJ,EAAMyC,SAC7BvC,EAAAC,EAAAC,cAAA,SACGJ,EAAMwC,MAAMxB,KADf,KACuBhB,EAAMwC,MAAME,eAEnCxC,EAAAC,EAAAC,cAAA,SAAIJ,EAAMwC,MAAMC,WAKf,MC2HIE,cAnIb,SAAAA,EAAY3C,GAAO,IAAA4C,EAAA,OAAApC,OAAAqC,EAAA,EAAArC,CAAAsC,KAAAH,IACjBC,EAAApC,OAAAuC,EAAA,EAAAvC,CAAAsC,KAAAtC,OAAAwC,EAAA,EAAAxC,CAAAmC,GAAAM,KAAAH,KAAM9C,KACDkD,MAAQ,CACXC,KAAM,CACJC,MAAO,IAETC,eAAWC,GAEbV,EAAKxB,eAAiBwB,EAAKxB,eAAemC,KAApB/C,OAAAgD,EAAA,EAAAhD,QAAAgD,EAAA,EAAAhD,CAAAoC,KARLA,mFAWC,IAAAa,EAAAX,KAClBA,KAAK9C,MAAM0D,OAAOC,KACfC,oBAAoB,IAAIC,KACxBC,KAAK,kBACJL,EAAKzD,MAAM+D,GACRC,WAAW,QACXC,KAAK,CAAE5B,OAAQoB,EAAKzD,MAAM0D,OAAOC,KAAKO,YAAYC,KAClDC,UAEJN,KAAK,SAAAX,GACAA,GAAQA,EAAKC,OACfK,EAAKY,SAAS,CACZlB,KAAMA,EACNE,UAAW,SAIhBiB,MAAM,SAAAC,GACLd,EAAKY,SAAS,CACZhB,UAAWkB,IAEbC,QAAQhC,MAAM+B,4CAILnC,EAAQqC,GAAO,IAAAC,EAAA5B,KAC5B,GAAI2B,GAASA,EAAME,QAAUF,EAAME,OAAOtE,MAAO,CAC/C,IAAMuE,EAASH,EAAME,OAAOtE,MAC5ByC,KAAK9C,MAAM0D,OAAOC,KACfC,oBAAoB,IAAIC,KACxBC,KAAK,kBACJY,EAAK1E,MAAM+D,GAAGC,WAAW,QAAQa,UAC/B,CACExC,OAAQqC,EAAK1E,MAAM0D,OAAOC,KAAKO,YAAYC,GAC3CW,YAAa1C,GAEf,CAAE2C,KAAM,CAAEC,mBAAoBJ,OAGjCd,KAAK,SAAAmB,GAEFA,GACAA,EAASC,eACkB,IAA3BD,EAASC,eAETR,EAAKL,SAAS,CAAEnD,iBAAkB0D,MAGrCN,MAAM,SAAAC,GACLC,QAAQhC,MAAM+B,2CAKT,IAAAY,EAAArC,KACX,OAAOA,KAAKI,MAAMC,KAAKC,MAAMxC,IAAI,SAAAU,GAAI,OACnCpB,EAAAC,EAAAC,cAACgF,EAAD,CACE9D,KAAMA,EACNe,OAAQ8C,EAAKjC,MAAMb,OACnBjB,eAAgB,SAAAiE,GAAC,OAAIF,EAAK/D,eAAeE,EAAKE,IAAK6D,IACnDtE,IAAKO,EAAKE,yCAMd,OAAKsB,KAAKI,MAAMG,UAiDPnD,EAAAC,EAAAC,cAACkF,EAAD,CAAO9C,MAAOM,KAAKI,MAAMG,YA/C9BnD,EAAAC,EAAAC,cAACF,EAAAC,EAAMoF,SAAP,KACErF,EAAAC,EAAAC,cAAA,OAAK2B,UAAU,OACb7B,EAAAC,EAAAC,cAAA,OAAK2B,UAAU,aACb7B,EAAAC,EAAAC,cAAA,MAAI2B,UAAU,cACZ7B,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CAAMC,GAAG,KAAT,SAEF3B,EAAAC,EAAAC,cAAA,MAAI2B,UAAU,UAAd,WAIN7B,EAAAC,EAAAC,cAAA,OAAK2B,UAAU,OACb7B,EAAAC,EAAAC,cAAA,OAAK2B,UAAU,aACb7B,EAAAC,EAAAC,cAAA,SAAO2B,UAAU,sCACf7B,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,qBAGJF,EAAAC,EAAAC,cAAA,aACG0C,KAAK0C,aACNtF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,eAMRF,EAAAC,EAAAC,cAAA,OAAK2B,UAAU,OACb7B,EAAAC,EAAAC,cAAA,OAAK2B,UAAU,aACb7B,EAAAC,EAAAC,cAAA,UAAQ2B,UAAU,kBAAkB0D,KAAK,UAAzC,kCAtHGC,sCCJJ,SAASC,EAAS3F,GAC/B,IAAM4F,EAAW5F,EAAM4F,SAEvB,IAAKA,EACH,OAAO,KAGT,IAAMC,EAAgB,aAAeD,EAASpE,IAE9C,OACEtB,EAAAC,EAAAC,cAAC0F,EAAA,EAAD,CACEjE,GAAIgE,EACJ9D,UAAU,kBACVgE,gBAAgB,UAEhB7F,EAAAC,EAAAC,cAAA,QAAM2B,UAAU,SAAS6D,EAASI,KACjCJ,EAASpE,KChBD,SAASyE,EAAYjG,GAClC,IAAMsB,EAAOtB,EAAMsB,KAEnB,IAAKA,EACH,OAAO,KAGT,IAAM4E,EAAY,SAAW5E,EAAKE,IAC5BG,EAAUD,aAAyBJ,EAAKK,QAE9C,OACEzB,EAAAC,EAAAC,cAACF,EAAAC,EAAMoF,SAAP,KACErF,EAAAC,EAAAC,cAAA,OAAK2B,UAAU,OACb7B,EAAAC,EAAAC,cAAA,OAAK2B,UAAU,YACb7B,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CAAMC,GAAIqE,GACP5E,EAAKK,SACJzB,EAAAC,EAAAC,cAAA,OAAK2B,UAAU,iBAAiBE,IAAKN,EAASO,IAAI,OAIxDhC,EAAAC,EAAAC,cAAA,OAAK2B,UAAU,YACb7B,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CAAMC,GAAIqE,GAAY5E,EAAKQ,OAASR,EAAKQ,QAE3C5B,EAAAC,EAAAC,cAAA,UAAKkB,EAAK6E,QAAU7E,EAAK6E,QACzBjG,EAAAC,EAAAC,cAAA,SAAIkB,EAAK8E,aAAe9E,EAAK8E,aAC7BlG,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CAAMG,UAAU,kBAAkBF,GAAIqE,GAAtC,eAEEhG,EAAAC,EAAAC,cAAA,QAAM2B,UAAU,yCAItB7B,EAAAC,EAAAC,cAAA,gBCqJSiG,cA9Kb,SAAAA,EAAYrG,GAAO,IAAA4C,EAAA,OAAApC,OAAAqC,EAAA,EAAArC,CAAAsC,KAAAuD,IACjBzD,EAAApC,OAAAuC,EAAA,EAAAvC,CAAAsC,KAAAtC,OAAAwC,EAAA,EAAAxC,CAAA6F,GAAApD,KAAAH,KAAM9C,KACDkD,MAAQ,CACXoD,WAAY,GACZC,qBAAiBjD,EACjBF,MAAO,GACPoD,mBAAelD,GANAV,mFAWjBE,KAAK2D,cAAc3D,KAAK9C,MAAM0G,MAAMC,OAAOf,UAC3C9C,KAAK8D,6DAGYC,GACb/D,KAAK9C,MAAM0G,MAAMC,OAAOf,WAAaiB,EAAUH,MAAMC,OAAOf,UAC9D9C,KAAK2D,cAAc3D,KAAK9C,MAAM0G,MAAMC,OAAOf,oDAI7B,IAAAnC,EAAAX,KAChBA,KAAK9C,MAAM0D,OAAOC,KACfC,oBAAoB,IAAIC,KACxBC,KAAK,kBACJL,EAAKzD,MAAM+D,GACRC,WAAW,QACX8C,UAAU,CACT,CACEC,OAAQ,CACNvF,IAAK,YACLwE,IAAK,CAAEgB,KAAM,KAGjB,CAAEC,MAAO,CAAEzF,IAAK,MAEjB0F,YAEJpD,KAAK,SAAAwC,GAKJA,EAAWa,QAJI,CACb3F,IAAK,MACLwE,IAAK,KAIPvC,EAAKY,SAAS,CACZiC,WAAYA,EACZC,gBAAiB,SAGpBjC,MAAM,SAAAC,GACLd,EAAKY,SAAS,CACZkC,gBAAiBhC,IAEnBC,QAAQ4C,IAAI7C,2CAIJqB,GAAU,IAAAlB,EAAA5B,KAChBuE,EAAQzB,GAAyB,QAAbA,EAAqB,CAAEA,SAAUA,GAAa,GAClErF,EAAU,CAAE+G,KAAM,CAAE9F,IAAK,IAE/BsB,KAAK9C,MAAM0D,OAAOC,KACfC,oBAAoB,IAAIC,KACxBC,KAAK,kBACJY,EAAK1E,MAAM+D,GACRC,WAAW,QACXC,KAAKoD,EAAO9G,GACZgH,YAEJzD,KAAK,SAAAV,GACJsB,EAAKL,SAAS,CACZjB,MAAOA,EACPoD,cAAe,SAGlBlC,MAAM,SAAAC,GACLG,EAAKL,SAAS,CACZmC,cAAejC,IAEjBC,QAAQhC,MAAM+B,2CAKlB,IAAMoC,EAASa,IAAYC,MAAM3E,KAAK9C,MAAM0H,SAASC,QACrD,OAAIhB,EAAOiB,KACFC,SAASlB,EAAOiB,MAEhB,6CAKT,OAAK9E,KAAKI,MAAMqD,gBAMPrG,EAAAC,EAAAC,cAACkF,EAAD,CAAO9C,MAAOM,KAAKI,MAAMqD,kBAJzBzD,KAAKI,MAAMoD,WAAW1F,IAAI,SAAAgF,GAAQ,OACvC1F,EAAAC,EAAAC,cAACuF,EAAD,CAAUC,SAAUA,EAAU7E,IAAK6E,EAASpE,iDAQhD,GAAKsB,KAAKI,MAAMsD,cAYd,OAAOtG,EAAAC,EAAAC,cAACkF,EAAD,CAAO9C,MAAOM,KAAKI,MAAMsD,gBAXhC,IACMsB,EAAkB,EADPhF,KAAKiF,cAEhBC,EAAQF,EAAO,EAErB,OAAOhF,KAAKI,MAAME,MAAMxC,IAAI,SAACU,EAAMT,GACjC,OAAIA,GAAKiH,GAAQjH,EAAImH,EACZ9H,EAAAC,EAAAC,cAAC6F,EAAD,CAAiB3E,KAAMA,EAAMP,IAAKO,EAAKE,MAEzC,kDAOM,IAAA2D,EAAArC,KACXmF,EAAQC,KAAKC,KAAKrF,KAAKI,MAAME,MAAMgF,OAAS,GAClD,OAAO5H,OAAAC,EAAA,EAAAD,CAAIE,MAAMuH,GAAOtH,QAAQC,IAAI,SAAAC,GAClC,IAAM+E,EAAWT,EAAKnF,MAAM0G,MAAMC,OAAOf,SACrCyC,EAAOzC,EAAW,aAAeA,EAAW,IAChDyC,GAAQ,SAAWxH,EACnB,IAAMyH,EAAUpI,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CAAMC,GAAIwG,GAAOxH,EAAI,GAE/B0H,EAAcpD,EAAK4C,gBAAkBlH,EAAI,SAAW,WAE1D,OACEX,EAAAC,EAAAC,cAAA,MAAI2B,UAAWwG,EAAaxH,IAAKF,GAC9ByH,sCAOP,IAAM1C,EAAW9C,KAAK9C,MAAM0G,MAAMC,OAAOf,SACnC4C,EAAe5C,GAAsB,MAE3C,OACE1F,EAAAC,EAAAC,cAACF,EAAAC,EAAMoF,SAAP,KACErF,EAAAC,EAAAC,cAAA,OAAK2B,UAAU,OACb7B,EAAAC,EAAAC,cAAA,OAAK2B,UAAU,aACb7B,EAAAC,EAAAC,cAAA,MAAI2B,UAAU,cACZ7B,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CAAMC,GAAG,KAAT,SAEF3B,EAAAC,EAAAC,cAAA,MAAI2B,UAAU,UAAUyG,MAI9BtI,EAAAC,EAAAC,cAAA,OAAK2B,UAAU,OACb7B,EAAAC,EAAAC,cAAA,OAAK2B,UAAU,YACb7B,EAAAC,EAAAC,cAAA,OAAK2B,UAAU,cAAce,KAAK2F,qBAGpCvI,EAAAC,EAAAC,cAAA,OAAK2B,UAAU,aACZe,KAAK4F,iBACNxI,EAAAC,EAAAC,cAAA,OAAK2B,UAAU,mBACb7B,EAAAC,EAAAC,cAAA,OAAK2B,UAAU,aACb7B,EAAAC,EAAAC,cAAA,MAAI2B,UAAU,cAAce,KAAK6F,gCArK9BjD,aCNEkD,cACnB,SAAAA,EAAY5I,GAAO,IAAA4C,EAAA,OAAApC,OAAAqC,EAAA,EAAArC,CAAAsC,KAAA8F,IACjBhG,EAAApC,OAAAuC,EAAA,EAAAvC,CAAAsC,KAAAtC,OAAAwC,EAAA,EAAAxC,CAAAoI,GAAA3F,KAAAH,KAAM9C,KACDkD,MAAQ,CACX2F,UAAU,EACVC,SAAU,gBAYZlG,EAAKmG,MAAQnG,EAAKmG,MAAMxF,KAAX/C,OAAAgD,EAAA,EAAAhD,QAAAgD,EAAA,EAAAhD,CAAAoC,KACbA,EAAKoG,OAASpG,EAAKoG,OAAOzF,KAAZ/C,OAAAgD,EAAA,EAAAhD,QAAAgD,EAAA,EAAAhD,CAAAoC,KAjBGA,mFAoBC,IAAAa,EAAAX,KACdA,KAAK9C,MAAM0D,OAAOC,KAAKsF,qBACzBnG,KAAK9C,MAAM0D,OAAOC,KAAKuF,uBAAuBpF,KAAK,SAAAqF,GACjD3E,QAAQ4C,IAAI+B,GACRA,GACF1F,EAAKY,SAAS,CACZ+E,YAAY,EACZpI,KAAMmI,EAAKnI,SAKf8B,KAAK9C,MAAM0D,OAAOC,KAAKyF,yCAkBvB/D,GAEJ,GADAA,EAAEgE,kBACGvG,KAAK9C,MAAM0D,OAAOC,KAAKyF,WAAY,CACtC,IAAME,EAAa,IAAIC,IACvBzG,KAAK9C,MAAM0D,OAAOC,KAAK6F,kBAAkBF,mCAWtCjE,GAAG,IAAAX,EAAA5B,KACRuC,EAAEgE,iBACEvG,KAAK9C,MAAM0D,OAAOC,KAAKyF,YAGzBtG,KAAK9C,MAAM0D,OAAOC,KAAKqF,SAASlF,KAAK,SAAAmB,GACnCT,QAAQ4C,IAAInC,GACRA,GACFP,EAAKL,SAAS,CACZ+E,YAAY,EACZpI,KAAM,wCAkBd,GAHmB8B,KAAK9C,MAAM0D,OAAOC,KAAKyF,WAG1B,CACd,IAAMpI,EAAO8B,KAAK9C,MAAM0D,OAAOC,KAAK8F,QAChC3G,KAAK9C,MAAM0D,OAAOC,KAAK8F,QAAQzI,KAC/B,eAGJ,OACEd,EAAAC,EAAAC,cAACF,EAAAC,EAAMoF,SAAP,KACErF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KAAGsJ,KAAK,WAAW3H,UAAU,WAA7B,YACYf,IAGdd,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KAAGsJ,KAAK,UAAUC,QAAS7G,KAAKkG,QAAhC,aAON,OACE9I,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KAAGsJ,KAAK,SAASC,QAAS7G,KAAKiG,OAA/B,kBArHyBrD,aCAdkE,cACnB,SAAAA,EAAY5J,GAAO,IAAA4C,EAAA,OAAApC,OAAAqC,EAAA,EAAArC,CAAAsC,KAAA8G,IACjBhH,EAAApC,OAAAuC,EAAA,EAAAvC,CAAAsC,KAAAtC,OAAAwC,EAAA,EAAAxC,CAAAoJ,GAAA3G,KAAAH,KAAM9C,KACD6J,UAAYjH,EAAKiH,UAAUtG,KAAf/C,OAAAgD,EAAA,EAAAhD,QAAAgD,EAAA,EAAAhD,CAAAoC,KAFAA,wHAQP,IAAAa,EAAAX,KAGNgH,EAAW,CACbzH,OAAQS,KAAK9C,MAAM0D,OAAOC,KAAKO,YAAYC,GAC3CW,YAAahC,KAAK9C,MAAMsB,KAAKE,KAEzBuI,EAAY,CAAEC,KAAM,CAAEhF,mBAAoB,IAEhDlC,KAAK9C,MAAM0D,OAAOC,KACfC,oBAAoB,IAAIC,KACxBC,KAAK,kBAEJL,EAAKzD,MAAM+D,GAAGC,WAAW,QAAQa,UAAUiF,EAAUC,KAEtDjG,KAAK,SAAAmB,GACJ,GAAIA,GAAuC,IAA3BA,EAASC,cAAqB,CAG5C,IAAI+E,EAAW,CAAE5H,OAAQoB,EAAKzD,MAAM0D,OAAOC,KAAKO,YAAYC,IACxD+F,EAAUzG,EAAKzD,MAAMsB,KACzB4I,EAAQjK,SAAW,EACnB,IAAMkK,EAAY,CAAEC,UAAW,CAAEhH,MAAO8G,IAClC3J,EAAU,CAAE8J,QAAQ,GAE1B5G,EAAKzD,MAAM0D,OAAOC,KACfC,oBAAoB,IAAIC,KACxBC,KAAK,kBACJL,EAAKzD,MAAM+D,GACRC,WAAW,QACXa,UAAUoF,EAAUE,EAAW5J,KAEnCuD,KAAK,SAAAmB,MAGLX,MAAM,SAAAC,GACLC,QAAQhC,MAAM+B,QAIrBD,MAAM,SAAAC,GACLC,QAAQhC,MAAM+B,iFAoBX,IAAAG,EAAA5B,KAEP,OADaA,KAAK9C,MAAMsB,KACfgJ,MAAQ,EAEbpK,EAAAC,EAAAC,cAAA,UACE2B,UAAU,kBACV0D,KAAK,SACLkE,QAAS7G,KAAK+G,WAHhB,cAME3J,EAAAC,EAAAC,cAAA,QAAM2B,UAAU,uCAKlB7B,EAAAC,EAAAC,cAACF,EAAAC,EAAMoF,SAAP,KACErF,EAAAC,EAAAC,cAAA,KAAG2B,UAAU,YAAb,uCACA7B,EAAAC,EAAAC,cAAA,UACE2B,UAAU,kBACV0D,KAAK,SACLkE,QAAS,kBAAMjF,EAAK6F,oBAHtB,aAKYrK,EAAAC,EAAAC,cAAA,WALZ,gBAOEF,EAAAC,EAAAC,cAAA,QAAM2B,UAAU,sCA9FW2D,aCSxB8E,EAVW,SAAAxK,GAGxB,OAFcA,EAAMyK,OACRzK,EAAMgG,IAET9F,EAAAC,EAAAC,cAAA,QAAM2B,UAAU,6BAEhB7B,EAAAC,EAAAC,cAAA,QAAM2B,UAAU,oCCCZ2I,EANO,SAAA1K,GACpB,OAAOQ,OAAAC,EAAA,EAAAD,CAAIE,MAAM,GAAGC,QAAQC,IAAI,SAAAC,GAAC,OAC/BX,EAAAC,EAAAC,cAACuK,EAAD,CAAmB3E,IAAKnF,EAAI,EAAG4J,MAAOzK,EAAMyK,MAAO1J,IAAKF,OCgD7C+J,EAjDK,SAAA5K,GAClB,OAAKA,EAAM6K,SAAoC,IAAzB7K,EAAM6K,QAAQzC,OAI7BpI,EAAM6K,QAAQjK,IAAI,SAACkK,EAAQjK,GAChC,IAAMkK,EAAO,IAAIC,KAAKF,EAAOC,MACvBE,EACJF,EAAKG,iBACL,KACC,KAAOH,EAAKI,cAAgB,IAAIC,OAAO,GACxC,KACC,IAAML,EAAKM,cAAcD,OAAO,GACjC,KACC,IAAML,EAAKO,eAAeF,OAAO,GAClC,KACC,IAAML,EAAKQ,iBAAiBH,OAAO,GACpC,KACC,IAAML,EAAKS,iBAAiBJ,OAAO,GAMtC,OAJIN,EAAOzI,QAAUyI,EAAOzI,SAAWrC,EAAM0D,OAAOC,KAAKO,YAAYC,KACnE2G,EAAOW,UAAW,GAIlBvL,EAAAC,EAAAC,cAACF,EAAAC,EAAMoF,SAAP,CAAgBxE,IAAKF,GACnBX,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,MAAI2B,UAAU,+BACX+I,EAAO9J,KACRd,EAAAC,EAAAC,cAAA,iBAAS6K,GACRH,EAAOW,UACNvL,EAAAC,EAAAC,cAAA,KAAGsJ,KAAK,cAAc3H,UAAU,eAAhC,SAKJ7B,EAAAC,EAAAC,cAAA,OAAK2B,UAAU,WACb7B,EAAAC,EAAAC,cAACsL,EAAD,CAAejB,MAAOK,EAAOL,SAE9BK,EAAOa,UAGZzL,EAAAC,EAAAC,cAAA,cAzCGF,EAAAC,EAAAC,cAAA,0DCAUwL,cACnB,SAAAA,EAAY5L,GAAO,IAAA4C,EAAA,OAAApC,OAAAqC,EAAA,EAAArC,CAAAsC,KAAA8I,IACjBhJ,EAAApC,OAAAuC,EAAA,EAAAvC,CAAAsC,KAAAtC,OAAAwC,EAAA,EAAAxC,CAAAoL,GAAA3I,KAAAH,KAAM9C,KACDkD,MAAQ,CACX2I,iBAAiB,EACjBC,OAAQ,EACRH,QAAS,GACTI,oBAAgBzI,GAGlBV,EAAKoJ,kBAAoBpJ,EAAKoJ,kBAAkBzI,KAAvB/C,OAAAgD,EAAA,EAAAhD,QAAAgD,EAAA,EAAAhD,CAAAoC,KACzBA,EAAKqJ,mBAAqBrJ,EAAKqJ,mBAAmB1I,KAAxB/C,OAAAgD,EAAA,EAAAhD,QAAAgD,EAAA,EAAAhD,CAAAoC,KAC1BA,EAAKsJ,oBAAsBtJ,EAAKsJ,oBAAoB3I,KAAzB/C,OAAAgD,EAAA,EAAAhD,QAAAgD,EAAA,EAAAhD,CAAAoC,KAC3BA,EAAKuJ,UAAYvJ,EAAKuJ,UAAU5I,KAAf/C,OAAAgD,EAAA,EAAAhD,QAAAgD,EAAA,EAAAhD,CAAAoC,KAZAA,mFAgBjBE,KAAKuB,SAAS,CACZwH,iBAAkB/I,KAAKI,MAAM2I,6DAIdpH,GACjB3B,KAAKuB,SAAS,CAAEyH,OAAQrH,EAAME,OAAOtE,oDAGnBoE,GAClB3B,KAAKuB,SAAS,CAAEsH,QAASlH,EAAME,OAAOtE,4CAG5B,IAAAoD,EAAAX,KACJgI,EAAS,CACbzI,OAAQS,KAAK9C,MAAM0D,OAAOC,KAAKO,YAAYC,GAC3CiI,UAAWtJ,KAAK9C,MAAMoM,UACtBpL,KAAM8B,KAAK9C,MAAM0D,OAAOC,KAAKO,YAAYlD,KACrC8B,KAAK9C,MAAM0D,OAAOC,KAAKO,YAAYlD,KACnC,iBACJ2K,QAAS7I,KAAKI,MAAMyI,QACpBlB,MAAO3H,KAAKI,MAAM4I,OAClBf,MAAM,IAAIC,MAAOqB,WAGbC,EAAYxJ,KAAK9C,MAAM0D,OAC1B6I,iBAAiBC,IAAkBC,QAAS,cAC5C1I,GAAG,aACNjB,KAAK9C,MAAM0D,OAAOC,KACfC,oBAAoB,IAAIC,KACxBC,KAAK,kBAAMwI,EAAUtI,WAAW,WAAW0I,UAAU5B,KACrDhH,KAAK,SAAAmB,GACJxB,EAAKY,SAAS,CAAE0H,eAAgB,KAAMF,iBAAiB,MAExDvH,MAAM,SAAAC,GACLd,EAAKY,SAAS,CAAE0H,eAAgBxH,IAChCC,QAAQhC,MAAM+B,sCAKlB,OAAKzB,KAAKI,MAAM2I,gBAQZ3L,EAAAC,EAAAC,cAAA,OAAK2B,UAAU,cACb7B,EAAAC,EAAAC,cAAA,UACEqF,KAAK,SACLkE,QAAS7G,KAAKkJ,kBACdjK,UAAU,qBAHZ,UAOA7B,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAA,uBAEEF,EAAAC,EAAAC,cAAA,UACEa,aAAc,EACdD,KAAK,SACLe,UAAU,oBACV1B,MAAOyC,KAAKI,MAAM7C,MAClBc,SAAU2B,KAAKmJ,oBAEf/L,EAAAC,EAAAC,cAAA,UAAQC,MAAM,KAAd,KACAH,EAAAC,EAAAC,cAAA,UAAQC,MAAM,KAAd,KACAH,EAAAC,EAAAC,cAAA,UAAQC,MAAM,KAAd,KACAH,EAAAC,EAAAC,cAAA,UAAQC,MAAM,KAAd,KACAH,EAAAC,EAAAC,cAAA,UAAQC,MAAM,KAAd,QAINH,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAA,YACEuM,KAAK,IACLC,KAAK,KACL5L,KAAK,UACL6L,YAAY,kBACZxM,MAAOyC,KAAKI,MAAMyI,QAClBxK,SAAU2B,KAAKoJ,uBAGnBhM,EAAAC,EAAAC,cAAA,UACEqF,KAAK,SACLkE,QAAS7G,KAAKqJ,UACdpK,UAAU,kBAHZ,eA1CF7B,EAAAC,EAAAC,cAAA,UAAQqF,KAAK,SAASkE,QAAS7G,KAAKkJ,mBAApC,qBA5D+BtG,aCOlBoH,cACnB,SAAAA,EAAY9M,GAAO,IAAA4C,EAAA,OAAApC,OAAAqC,EAAA,EAAArC,CAAAsC,KAAAgK,IACjBlK,EAAApC,OAAAuC,EAAA,EAAAvC,CAAAsC,KAAAtC,OAAAwC,EAAA,EAAAxC,CAAAsM,GAAA7J,KAAAH,KAAM9C,KACDkD,MAAQ,CACX5B,KAAM,GACNuJ,QAAS,GACTkC,kBAAczJ,EACd0J,kBAAc1J,GANCV,mFAWjBE,KAAKmK,eACLnK,KAAKoK,sDAGQ,IAAAzJ,EAAAX,KACPV,EAASyF,SAAS/E,KAAK9C,MAAM0G,MAAMC,OAAOxC,IAEhDrB,KAAK9C,MAAM0D,OAAOC,KACfC,oBAAoB,IAAIC,KACxBC,KAAK,kBACJL,EAAKzD,MAAM+D,GACRC,WAAW,QACXC,KAAK,CAAEzC,IAAKY,GAAU,CAAE4F,MAAO,IAC/BT,YAEJzD,KAAK,SAAAmB,GACAA,GAAYA,EAAS,IACvBxB,EAAKY,SAAS,CACZ/C,KAAM2D,EAAS,GACf8H,aAAc,SAInBzI,MAAM,SAAAC,GACLd,EAAKY,SAAS,CACZ0I,aAAcxI,IAEhBC,QAAQhC,MAAM+B,4CAIL,IAAAG,EAAA5B,KACPV,EAASyF,SAAS/E,KAAK9C,MAAM0G,MAAMC,OAAOxC,IAE1CmI,EAAYxJ,KAAK9C,MAAM0D,OAC1B6I,iBAAiBC,IAAkBC,QAAS,cAC5C1I,GAAG,aACNjB,KAAK9C,MAAM0D,OAAOC,KACfC,oBAAoB,IAAIC,KACxBC,KAAK,kBACJwI,EACGtI,WAAW,WACXC,KAAK,CAAEmI,UAAWhK,IAClBmF,YAEJzD,KAAK,SAAAmB,GACAA,GACFP,EAAKL,SAAS,CACZwG,QAAS5F,EACT+H,aAAc,SAInB1I,MAAM,SAAAC,GACLG,EAAKL,SAAS,CACZ2I,aAAczI,IAEhBC,QAAQhC,MAAM+B,sCAKlB,OACErE,EAAAC,EAAAC,cAACF,EAAAC,EAAMoF,SAAP,KACGzC,KAAKqK,gBACLrK,KAAKsK,yDAMV,IAAM9L,EAAOwB,KAAKI,MAAM5B,KAExB,IAAKA,EACH,OAAO,KAGT,IAAImJ,EAAQ,EACR4C,EAAa,EACXxC,EAAU/H,KAAKI,MAAM2H,QAE3B,GAAIA,EAAS,CACXwC,EAAaxC,EAAQzC,OAErB,IAAK,IAAIvH,EAAI,EAAGA,EAAIwM,EAAYxM,IAAK,CAEnC4J,GADeI,EAAQhK,GACP4J,MAGd4C,EAAa,IACf5C,GAAgB4C,GAIpB,IAAMC,EAAe,aAAehM,EAAKsE,SACnCjE,EAAUD,aAAyBJ,EAAKK,QAE9C,OAAKmB,KAAKI,MAAM6J,aAmDP7M,EAAAC,EAAAC,cAACkF,EAAD,CAAO9C,MAAOM,KAAKI,MAAM6J,eAjD9B7M,EAAAC,EAAAC,cAACF,EAAAC,EAAMoF,SAAP,KACErF,EAAAC,EAAAC,cAAA,OAAK2B,UAAU,OACb7B,EAAAC,EAAAC,cAAA,OAAK2B,UAAU,aACb7B,EAAAC,EAAAC,cAAA,MAAI2B,UAAU,cACZ7B,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CAAMC,GAAG,KAAT,SAEF3B,EAAAC,EAAAC,cAAA,MAAI2B,UAAU,UACZ7B,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CAAMC,GAAIyL,GAAehM,EAAKsE,WAEhC1F,EAAAC,EAAAC,cAAA,MAAI2B,UAAU,UAAUT,EAAKQ,UAInC5B,EAAAC,EAAAC,cAAA,OAAK2B,UAAU,OACb7B,EAAAC,EAAAC,cAAA,OAAK2B,UAAU,aACb7B,EAAAC,EAAAC,cAAA,MAAI2B,UAAU,eACXT,EAAKQ,MACN5B,EAAAC,EAAAC,cAAA,iBAASkB,EAAK6E,WAIpBjG,EAAAC,EAAAC,cAAA,OAAK2B,UAAU,OACb7B,EAAAC,EAAAC,cAAA,OAAK2B,UAAU,YACb7B,EAAAC,EAAAC,cAAA,OAAK2B,UAAU,iBAAiBE,IAAKN,EAASO,IAAI,MAGpDhC,EAAAC,EAAAC,cAAA,OAAK2B,UAAU,YACb7B,EAAAC,EAAAC,cAAA,iCAEAF,EAAAC,EAAAC,cAAA,OAAK2B,UAAU,WACb7B,EAAAC,EAAAC,cAAA,KAAG2B,UAAU,cAAcsL,EAA3B,cACAnN,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAACsL,EAAD,CAAejB,MAAOA,MAI1BvK,EAAAC,EAAAC,cAAA,SAAIkB,EAAK8E,aAETlG,EAAAC,EAAAC,cAACmN,EAAD,CACEjM,KAAMA,EACNyC,GAAIjB,KAAK9C,MAAM+D,GACfL,OAAQZ,KAAK9C,MAAM0D,oDAY/B,OAAKZ,KAAKI,MAAM8J,aAoBZ9M,EAAAC,EAAAC,cAACkF,EAAD,CACE7C,QAAS,gCACTD,MAAOM,KAAKI,MAAM8J,eApBpB9M,EAAAC,EAAAC,cAAA,OAAK2B,UAAU,eACb7B,EAAAC,EAAAC,cAAA,OAAK2B,UAAU,aACb7B,EAAAC,EAAAC,cAAA,MAAI2B,UAAU,eAAd,mBAEF7B,EAAAC,EAAAC,cAAA,OAAK2B,UAAU,aACb7B,EAAAC,EAAAC,cAACoN,EAAD,CACE9J,OAAQZ,KAAK9C,MAAM0D,OACnBmH,QAAS/H,KAAKI,MAAM2H,UAEtB3K,EAAAC,EAAAC,cAACqN,EAAD,CACE/J,OAAQZ,KAAK9C,MAAM0D,OACnB0I,UAAWtJ,KAAKI,MAAM5B,KAAKE,eAlLMkE,aCHzChC,EAASgK,IAAOC,2BAA2B,mBAC3C5J,EAAKL,EACR6I,iBAAiBC,IAAkBC,QAAS,eAC5C1I,GAAG,aAsFN6J,IAASC,OAAO3N,EAAAC,EAAAC,cApFA,kBACdF,EAAAC,EAAAC,cAAC0N,EAAA,EAAD,CAAQC,SAAUrM,cAChBxB,EAAAC,EAAAC,cAACF,EAAAC,EAAMoF,SAAP,KACErF,EAAAC,EAAAC,cAAA,OAAK2B,UAAU,yCAAyCiM,KAAK,cAC3D9N,EAAAC,EAAAC,cAAA,OAAK2B,UAAU,aACb7B,EAAAC,EAAAC,cAAA,OAAK2B,UAAU,iBACb7B,EAAAC,EAAAC,cAAA,UACEqF,KAAK,SACL1D,UAAU,gBACVkM,cAAY,WACZC,cAAY,iCAEZhO,EAAAC,EAAAC,cAAA,QAAM2B,UAAU,WAAhB,qBACA7B,EAAAC,EAAAC,cAAA,QAAM2B,UAAU,aAChB7B,EAAAC,EAAAC,cAAA,QAAM2B,UAAU,aAChB7B,EAAAC,EAAAC,cAAA,QAAM2B,UAAU,cAElB7B,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CAAMG,UAAU,eAAeF,GAAG,KAAlC,cAIF3B,EAAAC,EAAAC,cAAA,OACE2B,UAAU,2BACVoC,GAAG,gCAEHjE,EAAAC,EAAAC,cAAA,MAAI2B,UAAU,kBACZ7B,EAAAC,EAAAC,cAAC+N,EAAD,CAAOzK,OAAQA,KAEjBxD,EAAAC,EAAAC,cAAA,OAAK2B,UAAU,4BACb7B,EAAAC,EAAAC,cAAA,QACE2B,UAAU,2BACViM,KAAK,SACLI,OAAO,WAEPlO,EAAAC,EAAAC,cAAA,OAAK2B,UAAU,cACb7B,EAAAC,EAAAC,cAAA,SACEqF,KAAK,OACL1D,UAAU,eACVf,KAAK,QACL6L,YAAY,YAGhB3M,EAAAC,EAAAC,cAAA,UAAQqF,KAAK,SAAS1D,UAAU,mBAAhC,UAGA7B,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CAAMC,GAAG,SACP3B,EAAAC,EAAAC,cAAA,UAAQqF,KAAK,SAAS1D,UAAU,mBAC9B7B,EAAAC,EAAAC,cAAA,QACE2B,UAAU,oCACVsM,cAAY,SACX,IAJL,cAaZnO,EAAAC,EAAAC,cAAA,OAAK2B,UAAU,aACb7B,EAAAC,EAAAC,cAACkO,EAAA,EAAD,CACEC,OAAK,EACLC,KAAK,IACLX,OAAQ,SAAA7N,GAAK,OAAIE,EAAAC,EAAAC,cAACqO,EAADjO,OAAAkO,OAAA,GAAU1O,EAAV,CAAiB0D,OAAQA,EAAQK,GAAIA,QAExD7D,EAAAC,EAAAC,cAACkO,EAAA,EAAD,CACEE,KAAK,sBACLX,OAAQ,SAAA7N,GAAK,OAAIE,EAAAC,EAAAC,cAACqO,EAADjO,OAAAkO,OAAA,GAAU1O,EAAV,CAAiB0D,OAAQA,EAAQK,GAAIA,QAExD7D,EAAAC,EAAAC,cAACkO,EAAA,EAAD,CACEE,KAAK,QACLX,OAAQ,SAAA7N,GAAK,OAAIE,EAAAC,EAAAC,cAACuO,EAADnO,OAAAkO,OAAA,GAAU1O,EAAV,CAAiB0D,OAAQA,EAAQK,GAAIA,QAExD7D,EAAAC,EAAAC,cAACkO,EAAA,EAAD,CACEE,KAAK,YACLX,OAAQ,SAAA7N,GAAK,OACXE,EAAAC,EAAAC,cAACwO,EAADpO,OAAAkO,OAAA,GAAuB1O,EAAvB,CAA8B0D,OAAQA,EAAQK,GAAIA,YAQ9C,MAAa8K,SAASC,eAAe","file":"static/js/main.6c308056.chunk.js","sourcesContent":["import React from 'react';\n\nconst QuantitySelect = props => {\n  const options = [...Array(26).keys()].map(i => (\n    <QuantityOption quantity={i} key={i} />\n  ));\n\n  return (\n    <select\n      name=\"quantity\"\n      defaultValue={props.selectedQuantity}\n      onChange={props.updateQuantity}\n    >\n      {options}\n    </select>\n  );\n};\n\nconst QuantityOption = props => {\n  const quantity = props.quantity;\n  if (quantity === 0) {\n    return <option value={quantity}>0 (Remove)</option>;\n  } else {\n    return <option value={quantity}>{quantity}</option>;\n  }\n};\n\nexport default QuantitySelect;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport QuantitySelect from './QuantitySelect';\n\nconst CartItem = props => {\n  const item = props.item;\n\n  if (!item) {\n    return null;\n  }\n\n  const itemLink = '/item/' + item._id;\n  const imgUrl = process.env.PUBLIC_URL + item.img_url;\n\n  return (\n    <tr>\n      <td>\n        <Link to={itemLink}>{item.title && item.title}</Link>\n      </td>\n      <td className=\"muted center_text\">\n        <Link to={itemLink}>\n          <img width=\"300\" src={imgUrl} alt={item.title} />\n        </Link>\n      </td>\n      <td>\n        <QuantitySelect\n          selectedQuantity={item.quantity}\n          updateQuantity={props.updateQuantity}\n          itemId={props.itemId}\n          userId={props.userId}\n        />\n      </td>\n      <td>{item.price}</td>\n      <td>{item.price * item.quantity}</td>\n    </tr>\n  );\n};\n\nexport default CartItem;\n","import React from 'react';\n\nconst Error = props => {\n  if (props.error) {\n    return (\n      <div className=\"row error\">\n        <div className=\"col-md-12\">\n          {props.message && <h2>{props.message}</h2>}\n          <p>\n            {props.error.name}: {props.error.errorCodeName}\n          </p>\n          <p>{props.error.message}</p>\n        </div>\n      </div>\n    );\n  } else {\n    return null;\n  }\n};\n\nexport default Error;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { AnonymousCredential } from 'mongodb-stitch-browser-sdk';\n\nimport CartItem from './CartItem';\nimport Error from '../Error';\n\nclass Cart extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cart: {\n        items: []\n      },\n      cartError: undefined\n    };\n    this.updateQuantity = this.updateQuantity.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.client.auth\n      .loginWithCredential(new AnonymousCredential())\n      .then(() =>\n        this.props.db\n          .collection('cart')\n          .find({ userId: this.props.client.auth.currentUser.id })\n          .first()\n      )\n      .then(cart => {\n        if (cart && cart.items) {\n          this.setState({\n            cart: cart,\n            cartError: null\n          });\n        }\n      })\n      .catch(err => {\n        this.setState({\n          cartError: err\n        });\n        console.error(err);\n      });\n  }\n\n  updateQuantity(itemId, event) {\n    if (event && event.target && event.target.value) {\n      const newVal = event.target.value;\n      this.props.client.auth\n        .loginWithCredential(new AnonymousCredential())\n        .then(() =>\n          this.props.db.collection('cart').updateOne(\n            {\n              userId: this.props.client.auth.currentUser.id,\n              'items._id': itemId\n            },\n            { $set: { 'items.$.quantity': newVal } }\n          )\n        )\n        .then(response => {\n          if (\n            response &&\n            response.modifiedCount &&\n            response.modifiedCount === 1\n          ) {\n            this.setState({ selectedQuantity: newVal });\n          }\n        })\n        .catch(err => {\n          console.error(err);\n        });\n    }\n  }\n\n  renderCart() {\n    return this.state.cart.items.map(item => (\n      <CartItem\n        item={item}\n        userId={this.state.userId}\n        updateQuantity={e => this.updateQuantity(item._id, e)}\n        key={item._id}\n      />\n    ));\n  }\n\n  render() {\n    if (!this.state.cartError) {\n      return (\n        <React.Fragment>\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <ol className=\"breadcrumb\">\n                <li>\n                  <Link to=\"/\">Home</Link>\n                </li>\n                <li className=\"active\">Cart</li>\n              </ol>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <table className=\"table table-bordered table-striped\">\n                <thead>\n                  <tr>\n                    <th>Product Name</th>\n                    <th>Image</th>\n                    <th>Quantity</th>\n                    <th>Unit Price</th>\n                    <th>Total</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {this.renderCart()}\n                  <tr>\n                    <td>&nbsp;</td>\n                    <td>&nbsp;</td>\n                    <td>&nbsp;</td>\n                    <td>&nbsp;</td>\n                    <td />\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n\n            <div className=\"row\">\n              <div className=\"col-md-12\">\n                <button className=\"btn btn-success\" type=\"submit\">\n                  Proceed to Checkout\n                </button>\n              </div>\n            </div>\n          </div>\n        </React.Fragment>\n      );\n    } else {\n      return <Error error={this.state.cartError} />;\n    }\n  }\n}\n\nexport default Cart;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nexport default function Category(props) {\n  const category = props.category;\n\n  if (!category) {\n    return null;\n  }\n\n  const category_link = '/category/' + category._id;\n\n  return (\n    <NavLink\n      to={category_link}\n      className=\"list-group-item\"\n      activeClassName=\"active\"\n    >\n      <span className=\"badge\">{category.num}</span>\n      {category._id}\n    </NavLink>\n  );\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default function ProductItem(props) {\n  const item = props.item;\n\n  if (!item) {\n    return null;\n  }\n\n  const item_link = '/item/' + item._id;\n  const img_url = process.env.PUBLIC_URL + item.img_url;\n\n  return (\n    <React.Fragment>\n      <div className=\"row\">\n        <div className=\"col-md-7\">\n          <Link to={item_link}>\n            {item.img_url && (\n              <img className=\"img-responsive\" src={img_url} alt=\"\" />\n            )}\n          </Link>\n        </div>\n        <div className=\"col-md-5\">\n          <h3>\n            <Link to={item_link}>{item.title && item.title}</Link>\n          </h3>\n          <h4>{item.slogan && item.slogan}</h4>\n          <p>{item.description && item.description}</p>\n          <Link className=\"btn btn-primary\" to={item_link}>\n            View Product\n            <span className=\"glyphicon glyphicon-chevron-right\" />\n          </Link>\n        </div>\n      </div>\n      <hr />\n    </React.Fragment>\n  );\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { AnonymousCredential } from 'mongodb-stitch-browser-sdk';\nimport queryString from 'query-string';\n\nimport Category from './Category';\nimport Error from './Error';\nimport ProductListItem from './ProductList/ProductListItem';\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      categories: [],\n      categoriesError: undefined,\n      items: [],\n      productsError: undefined\n    };\n  }\n\n  componentDidMount() {\n    this.fetchProducts(this.props.match.params.category);\n    this.fetchCategories();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.match.params.category !== prevProps.match.params.category) {\n      this.fetchProducts(this.props.match.params.category);\n    }\n  }\n\n  fetchCategories() {\n    this.props.client.auth\n      .loginWithCredential(new AnonymousCredential())\n      .then(() =>\n        this.props.db\n          .collection('item')\n          .aggregate([\n            {\n              $group: {\n                _id: '$category',\n                num: { $sum: 1 }\n              }\n            },\n            { $sort: { _id: 1 } }\n          ])\n          .toArray()\n      )\n      .then(categories => {\n        var category = {\n          _id: 'All',\n          num: 23\n        };\n        categories.unshift(category);\n\n        this.setState({\n          categories: categories,\n          categoriesError: null\n        });\n      })\n      .catch(err => {\n        this.setState({\n          categoriesError: err\n        });\n        console.log(err);\n      });\n  }\n\n  fetchProducts(category) {\n    const query = category && category !== 'All' ? { category: category } : {};\n    const options = { sort: { _id: 1 } };\n\n    this.props.client.auth\n      .loginWithCredential(new AnonymousCredential())\n      .then(() =>\n        this.props.db\n          .collection('item')\n          .find(query, options)\n          .asArray()\n      )\n      .then(items => {\n        this.setState({\n          items: items,\n          productsError: null\n        });\n      })\n      .catch(err => {\n        this.setState({\n          productsError: err\n        });\n        console.error(err);\n      });\n  }\n\n  getCurrPage() {\n    const params = queryString.parse(this.props.location.search);\n    if (params.page) {\n      return parseInt(params.page);\n    } else {\n      return 0;\n    }\n  }\n\n  renderCategories() {\n    if (!this.state.categoriesError) {\n      // const category = this.props.match.params.category;\n      return this.state.categories.map(category => (\n        <Category category={category} key={category._id} />\n      ));\n    } else {\n      return <Error error={this.state.categoriesError} />;\n    }\n  }\n\n  renderProducts() {\n    if (!this.state.productsError) {\n      const currPage = this.getCurrPage();\n      const skip = currPage * 5;\n      const limit = skip + 5;\n\n      return this.state.items.map((item, i) => {\n        if (i >= skip && i < limit) {\n          return <ProductListItem item={item} key={item._id} />;\n        }\n        return null;\n      });\n    } else {\n      return <Error error={this.state.productsError} />;\n    }\n  }\n\n  renderPagination() {\n    const pages = Math.ceil(this.state.items.length / 5);\n    return [...Array(pages).keys()].map(i => {\n      const category = this.props.match.params.category;\n      let link = category ? '/category/' + category : '/';\n      link += '?page=' + i;\n      const linkElm = <Link to={link}>{i + 1}</Link>;\n\n      const activeClass = this.getCurrPage() === i ? 'active' : 'inactive';\n\n      return (\n        <li className={activeClass} key={i}>\n          {linkElm}\n        </li>\n      );\n    });\n  }\n\n  render() {\n    const category = this.props.match.params.category;\n    const categoryName = category ? category : 'All';\n\n    return (\n      <React.Fragment>\n        <div className=\"row\">\n          <div className=\"col-md-12\">\n            <ol className=\"breadcrumb\">\n              <li>\n                <Link to=\"/\">Home</Link>\n              </li>\n              <li className=\"active\">{categoryName}</li>\n            </ol>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-md-2\">\n            <div className=\"list-group\">{this.renderCategories()}</div>\n          </div>\n\n          <div className=\"col-md-10\">\n            {this.renderProducts()}\n            <div className=\"row text-center\">\n              <div className=\"col-lg-12\">\n                <ul className=\"pagination\">{this.renderPagination()}</ul>\n              </div>\n            </div>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Home;\n","import React, { Component } from 'react';\nimport { GoogleRedirectCredential } from 'mongodb-stitch-browser-sdk';\n\nexport default class Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loggedIn: false,\n      userName: 'Unnamed user'\n    };\n    // this.state = {\n    //   auth: {\n    //     id: 0,\n    //     profile: {\n    //       name: \"John Doe\"\n    //     }\n    //   },\n    //   loggedIn: this.props.client.auth.isLoggedIn\n    // };\n\n    this.login = this.login.bind(this);\n    this.logout = this.logout.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.props.client.auth.hasRedirectResult()) {\n      this.props.client.auth.handleRedirectResult().then(user => {\n        console.log(user);\n        if (user) {\n          this.setState({\n            isLoggedIn: true,\n            name: user.name\n          });\n        }\n      });\n    }\n    if (this.props.client.auth.isLoggedIn) {\n      // console.log(this.props.client);\n    }\n    // if (this.state.isLoggedIn) {\n    //   this.setState(state => ({\n    //     auth: {\n    //       id: \"5c6dc85f3e1e1e27a8131855\",\n    //       profile: {\n    //         email: \"robbert.kauffman@mongodb.com\",\n    //         firstName: \"Robbert\",\n    //         lastName: \"Kauffman\",\n    //         name: \"Robbert Kauffman\",\n    //       }\n    //     }\n    //   }));\n    // }\n  }\n\n  login(e) {\n    e.preventDefault();\n    if (!this.props.client.auth.isLoggedIn) {\n      const credential = new GoogleRedirectCredential();\n      this.props.client.auth.loginWithRedirect(credential);\n      // this.props.client.auth.isLoggedIn = true;\n    }\n    // e.preventDefault();\n    // if (!this.state.isLoggedIn) {\n    //   this.setState(state => ({\n    //     isLoggedIn: true\n    //   }));\n    // }\n  }\n\n  logout(e) {\n    e.preventDefault();\n    if (this.props.client.auth.isLoggedIn) {\n      // const credential = new GoogleRedirectCredential();\n      // this.props.client.auth.loginWithRedirect(credential);\n      this.props.client.auth.logout().then(response => {\n        console.log(response);\n        if (response) {\n          this.setState({\n            isLoggedIn: false,\n            name: ''\n          });\n        }\n      });\n      // this.props.client.auth.isLoggedIn = true;\n    }\n    // e.preventDefault();\n    // if (this.state.isLoggedIn) {\n    //   this.setState(state => ({\n    //     isLoggedIn: false\n    //   }));\n    // }\n  }\n\n  render() {\n    const isLoggedIn = this.props.client.auth.isLoggedIn;\n    // const isLoggedIn = this.state.isLoggedIn;\n\n    if (isLoggedIn) {\n      const name = this.props.client.auth.profile\n        ? this.props.client.auth.profile.name\n        : 'Unnamed user';\n      // const name = this.state.auth.profile.name;\n\n      return (\n        <React.Fragment>\n          <li>\n            <a href=\"#no-link\" className=\"no-link\">\n              Welcome, {name}\n            </a>\n          </li>\n          <li>\n            <a href=\"#logout\" onClick={this.logout}>\n              Log Out\n            </a>\n          </li>\n        </React.Fragment>\n      );\n    } else {\n      return (\n        <li>\n          <a href=\"#login\" onClick={this.login}>\n            Log In\n          </a>\n        </li>\n      );\n    }\n  }\n}\n","import React, { Component } from 'react';\nimport { AnonymousCredential } from 'mongodb-stitch-browser-sdk';\n\nexport default class Inventory extends Component {\n  constructor(props) {\n    super(props);\n    this.addToCart = this.addToCart.bind(this);\n    // this.setNotification = this.setNotification.bind(this);\n  }\n\n  componentDidMount() {}\n\n  addToCart() {\n    // first try to increment quantity of item in cart,\n    // if fails, add item to cart or create cart (upsert)\n    let incQuery = {\n      userId: this.props.client.auth.currentUser.id,\n      'items._id': this.props.item._id\n    };\n    const incUpdate = { $inc: { 'items.$.quantity': 1 } };\n\n    this.props.client.auth\n      .loginWithCredential(new AnonymousCredential())\n      .then(() =>\n        // increment quantity by one\n        this.props.db.collection('cart').updateOne(incQuery, incUpdate)\n      )\n      .then(response => {\n        if (response && response.modifiedCount !== 1) {\n          // if not incremented,\n          // either add item to cart or create new cart (upsert)\n          let addQuery = { userId: this.props.client.auth.currentUser.id };\n          let addItem = this.props.item;\n          addItem.quantity = 1;\n          const addUpdate = { $addToSet: { items: addItem } };\n          const options = { upsert: true };\n\n          this.props.client.auth\n            .loginWithCredential(new AnonymousCredential())\n            .then(() =>\n              this.props.db\n                .collection('cart')\n                .updateOne(addQuery, addUpdate, options)\n            )\n            .then(response => {\n              // console.log(response);\n            })\n            .catch(err => {\n              console.error(err);\n            });\n        }\n      })\n      .catch(err => {\n        console.error(err);\n      });\n  }\n\n  setNotification() {\n    // const notificationDocument = {\n    //   itemId: this.state.item._id,\n    //   userId: this.props.client.auth.currentUser.id,\n    //   email: this.props.client.auth.currentUser.profile.email\n    // };\n    // console.log(notificationDocument);\n    // this.props.client.auth.loginWithCredential(new AnonymousCredential()).then(() =>\n    //   this.props.db.collection('notify').insertOne(notificationDocument)\n    // ).then(response => {\n    //   console.log(response);\n    // }).catch(err => {\n    //   console.error(err);\n    // });\n  }\n\n  render() {\n    const item = this.props.item;\n    if (item.stock > 0) {\n      return (\n        <button\n          className=\"btn btn-primary\"\n          type=\"submit\"\n          onClick={this.addToCart}\n        >\n          Add to cart\n          <span className=\"glyphicon glyphicon-chevron-right\" />\n        </button>\n      );\n    } else {\n      return (\n        <React.Fragment>\n          <p className=\"red-text\">Sorry, this product is out of stock</p>\n          <button\n            className=\"btn btn-primary\"\n            type=\"submit\"\n            onClick={() => this.setNotification()}\n          >\n            Notify me <br />\n            when in stock\n            <span className=\"glyphicon glyphicon-bell\" />\n          </button>\n        </React.Fragment>\n      );\n    }\n  }\n}\n","import React from 'react';\n\nconst ProductRatingStar = props => {\n  const stars = props.stars;\n  const num = props.num;\n  if (stars >= num) {\n    return <span className=\"glyphicon glyphicon-star\" />;\n  } else {\n    return <span className=\"glyphicon glyphicon-star-empty\" />;\n  }\n};\n\nexport default ProductRatingStar;\n","import React from 'react';\nimport ProductRatingStar from './ProductRatingStar';\n\nconst ProductRating = props => {\n  return [...Array(5).keys()].map(i => (\n    <ProductRatingStar num={i + 1} stars={props.stars} key={i} />\n  ));\n};\n\nexport default ProductRating;\n","import React from 'react';\n\nimport ProductRating from '../ProductRating/ProductRating';\n\nconst ListReviews = props => {\n  if (!props.reviews || props.reviews.length === 0) {\n    return <p>There are no reviews for this product yet...</p>;\n  }\n\n  return props.reviews.map((review, i) => {\n    const date = new Date(review.date);\n    const dateString =\n      date.getUTCFullYear() +\n      '/' +\n      ('0' + (date.getUTCMonth() + 1)).slice(-2) +\n      '/' +\n      ('0' + date.getUTCDate()).slice(-2) +\n      ' ' +\n      ('0' + date.getUTCHours()).slice(-2) +\n      ':' +\n      ('0' + date.getUTCMinutes()).slice(-2) +\n      ':' +\n      ('0' + date.getUTCSeconds()).slice(-2);\n\n    if (review.userId && review.userId === props.client.auth.currentUser.id) {\n      review.editable = true;\n    }\n\n    return (\n      <React.Fragment key={i}>\n        <div>\n          <div>\n            <h4 className=\"media-heading review-header\">\n              {review.name}\n              <small> {dateString}</small>\n              {review.editable && (\n                <a href=\"#editReview\" className=\"edit-review\">\n                  Edit\n                </a>\n              )}\n            </h4>\n            <div className=\"ratings\">\n              <ProductRating stars={review.stars} />\n            </div>\n            {review.comment}\n          </div>\n        </div>\n        <hr />\n      </React.Fragment>\n    );\n  });\n};\n\nexport default ListReviews;\n","import React, { Component } from 'react';\nimport {\n  AnonymousCredential,\n  RemoteMongoClient\n} from 'mongodb-stitch-browser-sdk';\n\nexport default class AddReview extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isWritingReview: false,\n      rating: 5,\n      comment: '',\n      addReviewError: undefined\n    };\n\n    this.toggleWriteReview = this.toggleWriteReview.bind(this);\n    this.handleRatingChange = this.handleRatingChange.bind(this);\n    this.handleCommentChange = this.handleCommentChange.bind(this);\n    this.addReview = this.addReview.bind(this);\n  }\n\n  toggleWriteReview() {\n    this.setState({\n      isWritingReview: !this.state.isWritingReview\n    });\n  }\n\n  handleRatingChange(event) {\n    this.setState({ rating: event.target.value });\n  }\n\n  handleCommentChange(event) {\n    this.setState({ comment: event.target.value });\n  }\n\n  addReview() {\n    const review = {\n      userId: this.props.client.auth.currentUser.id,\n      productId: this.props.productId,\n      name: this.props.client.auth.currentUser.name\n        ? this.props.client.auth.currentUser.name\n        : 'Anonymous User',\n      comment: this.state.comment,\n      stars: this.state.rating,\n      date: new Date().getTime()\n    };\n\n    const reviewsDb = this.props.client\n      .getServiceClient(RemoteMongoClient.factory, 'mm-reviews')\n      .db('mongomart');\n    this.props.client.auth\n      .loginWithCredential(new AnonymousCredential())\n      .then(() => reviewsDb.collection('reviews').insertOne(review))\n      .then(response => {\n        this.setState({ addReviewError: null, isWritingReview: false });\n      })\n      .catch(err => {\n        this.setState({ addReviewError: err });\n        console.error(err);\n      });\n  }\n\n  render() {\n    if (!this.state.isWritingReview) {\n      return (\n        <button type=\"button\" onClick={this.toggleWriteReview}>\n          Add review\n        </button>\n      );\n    } else {\n      return (\n        <div className=\"new-review\">\n          <button\n            type=\"button\"\n            onClick={this.toggleWriteReview}\n            className=\"cancel-new-review\"\n          >\n            Cancel\n          </button>\n          <p>\n            <label>\n              Rating:\n              <select\n                defaultValue={5}\n                name=\"rating\"\n                className=\"new-review-rating\"\n                value={this.state.value}\n                onChange={this.handleRatingChange}\n              >\n                <option value=\"1\">1</option>\n                <option value=\"2\">2</option>\n                <option value=\"3\">3</option>\n                <option value=\"4\">4</option>\n                <option value=\"5\">5</option>\n              </select>\n            </label>\n          </p>\n          <p>\n            <textarea\n              rows=\"1\"\n              cols=\"50\"\n              name=\"comment\"\n              placeholder=\"Your comment...\"\n              value={this.state.comment}\n              onChange={this.handleCommentChange}\n            />\n          </p>\n          <button\n            type=\"button\"\n            onClick={this.addReview}\n            className=\"add-new-review\"\n          >\n            Add Review\n          </button>\n        </div>\n      );\n    }\n  }\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n  AnonymousCredential,\n  RemoteMongoClient\n} from 'mongodb-stitch-browser-sdk';\n\nimport Error from '../Error';\nimport Inventory from './Inventory';\nimport ListReviews from '../Reviews/ListReviews';\nimport AddReview from '../Reviews/AddReview';\nimport ProductRating from '../ProductRating/ProductRating';\n\nexport default class ProductItemDetail extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      item: {},\n      reviews: [],\n      productError: undefined,\n      reviewsError: undefined\n    };\n  }\n\n  componentDidMount() {\n    this.fetchProduct();\n    this.fetchReviews();\n  }\n\n  fetchProduct() {\n    const itemId = parseInt(this.props.match.params.id);\n\n    this.props.client.auth\n      .loginWithCredential(new AnonymousCredential())\n      .then(() =>\n        this.props.db\n          .collection('item')\n          .find({ _id: itemId }, { limit: 1 })\n          .asArray()\n      )\n      .then(response => {\n        if (response && response[0]) {\n          this.setState({\n            item: response[0],\n            productError: null\n          });\n        }\n      })\n      .catch(err => {\n        this.setState({\n          productError: err\n        });\n        console.error(err);\n      });\n  }\n\n  fetchReviews() {\n    const itemId = parseInt(this.props.match.params.id);\n\n    const reviewsDb = this.props.client\n      .getServiceClient(RemoteMongoClient.factory, 'mm-reviews')\n      .db('mongomart');\n    this.props.client.auth\n      .loginWithCredential(new AnonymousCredential())\n      .then(() =>\n        reviewsDb\n          .collection('reviews')\n          .find({ productId: itemId })\n          .asArray()\n      )\n      .then(response => {\n        if (response) {\n          this.setState({\n            reviews: response,\n            reviewsError: null\n          });\n        }\n      })\n      .catch(err => {\n        this.setState({\n          reviewsError: err\n        });\n        console.error(err);\n      });\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        {this.renderProduct()}\n        {this.renderReviews()}\n      </React.Fragment>\n    );\n  }\n\n  renderProduct() {\n    const item = this.state.item;\n\n    if (!item) {\n      return null;\n    }\n\n    let stars = 0;\n    let numReviews = 0;\n    const reviews = this.state.reviews;\n\n    if (reviews) {\n      numReviews = reviews.length;\n\n      for (let i = 0; i < numReviews; i++) {\n        const review = reviews[i];\n        stars += review.stars;\n      }\n\n      if (numReviews > 0) {\n        stars = stars / numReviews;\n      }\n    }\n\n    const categoryLink = '/category/' + item.category;\n    const img_url = process.env.PUBLIC_URL + item.img_url;\n\n    if (!this.state.productError) {\n      return (\n        <React.Fragment>\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <ol className=\"breadcrumb\">\n                <li>\n                  <Link to=\"/\">Home</Link>\n                </li>\n                <li className=\"active\">\n                  <Link to={categoryLink}>{item.category}</Link>\n                </li>\n                <li className=\"active\">{item.title}</li>\n              </ol>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-lg-12\">\n              <h1 className=\"page-header\">\n                {item.title}\n                <small> {item.slogan}</small>\n              </h1>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-md-8\">\n              <img className=\"img-responsive\" src={img_url} alt=\"\" />\n            </div>\n\n            <div className=\"col-md-4\">\n              <h3>Product Description</h3>\n\n              <div className=\"ratings\">\n                <p className=\"pull-right\">{numReviews} review(s)</p>\n                <p>\n                  <ProductRating stars={stars} />\n                </p>\n              </div>\n\n              <p>{item.description}</p>\n\n              <Inventory\n                item={item}\n                db={this.props.db}\n                client={this.props.client}\n              />\n            </div>\n          </div>\n        </React.Fragment>\n      );\n    } else {\n      return <Error error={this.state.productError} />;\n    }\n  }\n\n  renderReviews() {\n    if (!this.state.reviewsError) {\n      return (\n        <div className=\"row reviews\">\n          <div className=\"col-lg-12\">\n            <h3 className=\"page-header\">Latest Reviews</h3>\n          </div>\n          <div className=\"col-lg-12\">\n            <ListReviews\n              client={this.props.client}\n              reviews={this.state.reviews}\n            />\n            <AddReview\n              client={this.props.client}\n              productId={this.state.item._id}\n            />\n          </div>\n        </div>\n      );\n    } else {\n      return (\n        <Error\n          message={'Error while fetching reviews!'}\n          error={this.state.reviewsError}\n        />\n      );\n    }\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport { Stitch, RemoteMongoClient } from 'mongodb-stitch-browser-sdk';\n\nimport Cart from './Cart/Cart';\nimport Home from './Home';\nimport Login from './Login';\nimport ProductItemDetail from './ProductDetail/ProductItemDetail';\n\nconst client = Stitch.initializeDefaultAppClient('mongomart-vyoeg');\nconst db = client\n  .getServiceClient(RemoteMongoClient.factory, 'mm-products')\n  .db('mongomart');\n\nconst Routing = () => (\n  <Router basename={process.env.PUBLIC_URL}>\n    <React.Fragment>\n      <nav className=\"navbar navbar-inverse navbar-fixed-top\" role=\"navigation\">\n        <div className=\"container\">\n          <div className=\"navbar-header\">\n            <button\n              type=\"button\"\n              className=\"navbar-toggle\"\n              data-toggle=\"collapse\"\n              data-target=\"#bs-example-navbar-collapse-1\"\n            >\n              <span className=\"sr-only\">Toggle navigation</span>\n              <span className=\"icon-bar\" />\n              <span className=\"icon-bar\" />\n              <span className=\"icon-bar\" />\n            </button>\n            <Link className=\"navbar-brand\" to=\"/\">\n              MongoMart\n            </Link>\n          </div>\n          <div\n            className=\"collapse navbar-collapse\"\n            id=\"bs-example-navbar-collapse-1\"\n          >\n            <ul className=\"nav navbar-nav\">\n              <Login client={client} />\n            </ul>\n            <div className=\"collapse navbar-collapse\">\n              <form\n                className=\"navbar-form navbar-right\"\n                role=\"search\"\n                action=\"/search\"\n              >\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"query\"\n                    placeholder=\"Search\"\n                  />\n                </div>\n                <button type=\"submit\" className=\"btn btn-default\">\n                  Submit\n                </button>\n                <Link to=\"/cart\">\n                  <button type=\"button\" className=\"btn btn-success\">\n                    <span\n                      className=\"glyphicon glyphicon-shopping-cart\"\n                      aria-hidden=\"true\"\n                    />{' '}\n                    Cart\n                  </button>\n                </Link>\n              </form>\n            </div>\n          </div>\n        </div>\n      </nav>\n      <div className=\"container\">\n        <Route\n          exact\n          path=\"/\"\n          render={props => <Home {...props} client={client} db={db} />}\n        />\n        <Route\n          path=\"/category/:category\"\n          render={props => <Home {...props} client={client} db={db} />}\n        />\n        <Route\n          path=\"/cart\"\n          render={props => <Cart {...props} client={client} db={db} />}\n        />\n        <Route\n          path=\"/item/:id\"\n          render={props => (\n            <ProductItemDetail {...props} client={client} db={db} />\n          )}\n        />\n      </div>\n    </React.Fragment>\n  </Router>\n);\n\nReactDOM.render(<Routing />, document.getElementById('root'));\n"],"sourceRoot":""}